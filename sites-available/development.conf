# DEVELOPMENT ENVIRONMENT CONFIGURATION
# Developer-friendly nginx configuration for local development
# Optimized for rapid development cycles with hot reload and debugging features
# Features:
# Replace 'dev.local' with your preferred local domain

# DEVELOPMENT SERVICES UPSTREAM DEFINITIONS

# Frontend development server (React, Vue, Angular, etc.)
upstream frontend_dev {
    server 127.0.0.1:3000;  # React/Vue default
    # server 127.0.0.1:5173;  # Vite default
    # server 127.0.0.1:4200;  # Angular default
    # server 127.0.0.1:8080;  # Vue CLI default
    
    keepalive 8;
}

# Backend API development server
upstream backend_dev {
    server 127.0.0.1:8000;  # Common backend port
    # server 127.0.0.1:3001;  # Node.js/Express alternative
    # server 127.0.0.1:5000;  # Flask/FastAPI default
    # server 127.0.0.1:8080;  # Spring Boot default
    
    keepalive 8;
}

# Database admin tools
upstream db_admin_dev {
    server 127.0.0.1:8081;  # phpMyAdmin, Adminer
    keepalive 4;
}

# Development tools and services
upstream dev_tools {
    server 127.0.0.1:9000;  # Development dashboard
    keepalive 4;
}

# Storybook or component library
upstream storybook_dev {
    server 127.0.0.1:6006;  # Storybook default
    keepalive 4;
}

# Documentation server
upstream docs_dev {
    server 127.0.0.1:4000;  # Jekyll, GitBook, etc.
    keepalive 4;
}

# Main development server
server {
    listen                  80;
    listen                  [::]:80;
    server_name             dev.local *.dev.local localhost;

    # Development-specific settings
    access_log              /var/log/nginx/dev-access.log;
    error_log               /var/log/nginx/dev-error.log debug;

    # Disable rate limiting in development
    # limit_req               zone=general burst=1000 nodelay;

    #
    # FRONTEND DEVELOPMENT SERVER
    #

    # Main frontend application with hot reload support
    location / {
        proxy_pass          http://frontend_dev;
        
        # Essential headers for development
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        
        # Development-specific headers
        proxy_set_header    X-Dev-Server "frontend";
        proxy_set_header    X-Request-ID $request_id;
        
        # Hot reload support (WebSocket for HMR)
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection $connection_upgrade;
        
        # Disable buffering for real-time updates
        proxy_buffering     off;
        proxy_cache         off;
        
        # Extended timeouts for development
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # CORS for development (very permissive)
        add_header          Access-Control-Allow-Origin * always;
        add_header          Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header          Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, Accept, Origin, Cache-Control, X-File-Name" always;
        add_header          Access-Control-Allow-Credentials true always;
        add_header          Access-Control-Max-Age 86400 always;
        
        # Handle preflight requests
        if ($request_method = OPTIONS) {
            add_header      Content-Length 0;
            add_header      Content-Type text/plain;
            return          204;
        }
        
        # Development debugging headers
        add_header          X-Debug-Frontend-Server $upstream_addr always;
        add_header          X-Debug-Response-Time $upstream_response_time always;
        add_header          X-Debug-Request-Time $request_time always;
    }

    #
    # BACKEND API DEVELOPMENT
    #

    # Backend API with development features
    location /api/ {
        proxy_pass          http://backend_dev;
        
        # Standard proxy headers
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        
        # Development headers
        proxy_set_header    X-Dev-Server "backend";
        proxy_set_header    X-Request-ID $request_id;
        proxy_set_header    X-Debug-Mode "true";
        
        # Disable caching for API responses
        proxy_buffering     off;
        proxy_cache         off;
        
        # Extended timeouts for debugging
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Handle large request bodies for file uploads
        client_max_body_size 1G;
        proxy_request_buffering off;
        
        # CORS for API development
        add_header          Access-Control-Allow-Origin $http_origin always;
        add_header          Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header          Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, Accept, Origin, Cache-Control, X-File-Name, X-Debug-Mode" always;
        add_header          Access-Control-Allow-Credentials true always;
        
        # Handle preflight requests
        if ($request_method = OPTIONS) {
            add_header      Access-Control-Max-Age 86400;
            add_header      Content-Length 0;
            add_header      Content-Type text/plain;
            return          204;
        }
        
        # Debug headers
        add_header          X-Debug-Backend-Server $upstream_addr always;
        add_header          X-Debug-API-Response-Time $upstream_response_time always;
    }

    #
    # WEBSOCKET DEVELOPMENT SUPPORT
    #

    # WebSocket connections for real-time features
    location /ws/ {
        proxy_pass          http://backend_dev;
        
        # Essential WebSocket headers
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection $connection_upgrade;
        
        # Standard headers
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        
        # Development headers
        proxy_set_header    X-Dev-WebSocket "true";
        proxy_set_header    X-Request-ID $request_id;
        
        # WebSocket timeouts (extended for debugging)
        proxy_read_timeout  24h;
        proxy_send_timeout  24h;
        
        # Disable caching
        proxy_cache_bypass  $http_upgrade;
        proxy_no_cache      $http_upgrade;
        
        # Debug headers
        add_header          X-Debug-WebSocket-Server $upstream_addr always;
    }

    # Hot Module Replacement (HMR) WebSocket for Vite/Webpack
    location /vite-hmr {
        proxy_pass          http://frontend_dev;
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection $connection_upgrade;
        proxy_set_header    Host $host;
        proxy_read_timeout  24h;
        proxy_send_timeout  24h;
    }

    #
    # DEVELOPMENT TOOLS AND SERVICES
    #

    # Database administration interface
    location /db-admin/ {
        proxy_pass          http://db_admin_dev/;
        
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header    X-Dev-Tool "db-admin";
        
        # Extended timeouts for database operations
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Storybook component library
    location /storybook/ {
        proxy_pass          http://storybook_dev/;
        
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        
        # Hot reload support for Storybook
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection $connection_upgrade;
        
        proxy_buffering     off;
        proxy_cache         off;
    }

    # Documentation server
    location /docs/ {
        proxy_pass          http://docs_dev/;
        
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        
        # Hot reload for documentation
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection $connection_upgrade;
        
        proxy_buffering     off;
    }

    # Development dashboard
    location /dev-tools/ {
        proxy_pass          http://dev_tools/;
        
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header    X-Dev-Dashboard "true";
    }

    #
    # STATIC ASSETS FOR DEVELOPMENT
    #

    # Serve local static files (if needed)
    location /static/ {
        alias               /var/www/dev-static/;
        
        # Disable caching in development
        expires             -1;
        add_header          Cache-Control "no-cache, no-store, must-revalidate";
        add_header          Pragma "no-cache";
        
        # CORS for static assets
        add_header          Access-Control-Allow-Origin * always;
        
        # Debug headers
        add_header          X-Debug-Static-File $uri always;
        
        try_files           $uri $uri/ =404;
    }

    #
    # DEVELOPMENT DEBUGGING AND MONITORING
    #

    # Development health check with detailed info
    location /dev-health {
        access_log          off;
        
        # Return detailed development status
        return              200 "Development Environment Status:\nFrontend: http://127.0.0.1:3000\nBackend: http://127.0.0.1:8000\nDB Admin: http://127.0.0.1:8081\nStorybook: http://127.0.0.1:6006\nDocs: http://127.0.0.1:4000\nTime: $time_iso8601\nRequest ID: $request_id\n";
        
        add_header          Content-Type text/plain;
        add_header          X-Dev-Health "ok";
    }

    # Nginx status for development monitoring
    location /nginx-status {
        stub_status         on;
        access_log          off;
        
        # Allow from development networks
        allow               127.0.0.1;
        allow               ::1;
        allow               10.0.0.0/8;
        allow               172.16.0.0/12;
        allow               192.168.0.0/16;
        deny                all;
    }

    # Development request debugging
    location /debug-request {
        access_log          off;
        
        # Return request details for debugging
        return              200 "Request Debug Info:\nMethod: $request_method\nURI: $request_uri\nArgs: $args\nHeaders: $http_user_agent\nIP: $remote_addr\nTime: $time_iso8601\nRequest ID: $request_id\n";
        
        add_header          Content-Type text/plain;
        add_header          X-Debug-Request "enabled";
    }

    #
    # ERROR HANDLING FOR DEVELOPMENT
    #

    # Custom error pages with debugging info
    error_page 404 /dev-404.html;
    error_page 500 502 503 504 /dev-50x.html;
    
    location = /dev-404.html {
        internal;
        return              404 "Development 404 Error:\nURI: $request_uri\nMethod: $request_method\nTime: $time_iso8601\nRequest ID: $request_id\nUpstream: $upstream_addr\n";
        add_header          Content-Type text/plain;
    }
    
    location = /dev-50x.html {
        internal;
        return              500 "Development Server Error:\nURI: $request_uri\nMethod: $request_method\nTime: $time_iso8601\nRequest ID: $request_id\nUpstream: $upstream_addr\nUpstream Status: $upstream_status\n";
        add_header          Content-Type text/plain;
    }
}

# SUBDOMAIN ROUTING FOR DEVELOPMENT SERVICES

# API subdomain for development
server {
    listen                  80;
    server_name             api.dev.local;

    location / {
        proxy_pass          http://backend_dev;
        include             conf.d/proxy.conf;
        
        proxy_set_header    X-Dev-Subdomain "api";
        
        # CORS for API subdomain
        add_header          Access-Control-Allow-Origin * always;
        add_header          Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header          Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header          Access-Control-Allow-Credentials true always;
    }
}

# Storybook subdomain
server {
    listen                  80;
    server_name             storybook.dev.local;

    location / {
        proxy_pass          http://storybook_dev;
        include             conf.d/proxy.conf;
        
        proxy_set_header    X-Dev-Subdomain "storybook";
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection $connection_upgrade;
        
        proxy_buffering     off;
    }
}

# Documentation subdomain
server {
    listen                  80;
    server_name             docs.dev.local;

    location / {
        proxy_pass          http://docs_dev;
        include             conf.d/proxy.conf;
        
        proxy_set_header    X-Dev-Subdomain "docs";
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection $connection_upgrade;
        
        proxy_buffering     off;
    }
}

# USAGE INSTRUCTIONS
#    127.0.0.1 dev.local api.dev.local storybook.dev.local docs.dev.local
# This configuration is designed for local development only.
# Do not use in production environments due to permissive CORS
# and disabled security features.