# Reverse Proxy Configuration - Single backend application
# Features: health checks, failover, rate limiting, WebSocket support

# Backend server definition
upstream backend_app {
    # Primary backend server
    server 127.0.0.1:3000;
    
    # Optional: Add backup servers
    # server 127.0.0.1:3001 backup;
    # server 127.0.0.1:3002 backup;
    
    # Connection optimization
    keepalive 32;
    keepalive_requests 1000;
    keepalive_timeout 60s;
    
    # Health check configuration (nginx plus feature)
    # For open source nginx, use external health check tools
    # health_check interval=30s fails=3 passes=2;
}

# HTTP to HTTPS redirect
server {
    listen                  80;
    listen                  [::]:80;
    server_name             your-app.com www.your-app.com;

    # Allow ACME challenge for Let's Encrypt
    include                 snippets/letsencrypt.conf;

    # Redirect all HTTP traffic to HTTPS
    location / {
        return              301 https://$server_name$request_uri;
    }
}

# Main HTTPS server for reverse proxy
server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    http2                   on;
    server_name             your-app.com www.your-app.com;

    # SSL Configuration
    ssl_certificate         /etc/letsencrypt/live/your-app.com/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/your-app.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/your-app.com/chain.pem;

    # Include snippets
    include                 snippets/security-headers.conf;
    include                 snippets/error-pages.conf;

    # Rate limiting
    limit_req               zone=general burst=20 nodelay;

    # Main application proxy
    location / {
        # Proxy to backend
        proxy_pass          http://backend_app;
        
        # Standard proxy headers
        include             snippets/proxy-headers.conf;
        
        # Handle large request bodies (file uploads)
        client_max_body_size 100M;
        proxy_request_buffering off;
        
        # Timeouts for application responses
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }

    # WebSocket support (uncomment if needed)
    # location /ws {
    #     proxy_pass          http://backend_app;
    #     
    #     # Essential WebSocket headers
    #     proxy_set_header    Upgrade $http_upgrade;
    #     proxy_set_header    Connection $connection_upgrade;
    #     
     #     # Standard proxy headers
     #     include             snippets/proxy-headers.conf;    #     
    #     # WebSocket timeouts
    #     proxy_read_timeout  3600s;
    #     proxy_send_timeout  3600s;
    #     
    #     # Disable caching
    #     proxy_cache_bypass  $http_upgrade;
    #     proxy_no_cache      $http_upgrade;
    # }
}

# Usage: Replace domain, configure upstream servers, adjust rate limits
# Enable: ln -s ../sites-available/reverse-proxy.conf sites-enabled/
# Backend requirements: /health endpoint, handle X-Forwarded-* headers