# Grafana Monitoring Dashboard Configuration
# Replace 'grafana.example.com' with your actual domain name
# This configuration is optimized for Grafana requirements

# HTTP to HTTPS redirect
server {
    listen                  80;
    listen                  [::]:80;
    server_name             grafana.example.com;

    # Allow ACME challenge for Let's Encrypt
    include                 snippets/letsencrypt.conf;

    # Redirect all HTTP traffic to HTTPS
    location / {
        return              301 https://$server_name$request_uri;
    }
}

# Main Grafana HTTPS server
server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    listen                  443 quic reuseport;
    listen                  [::]:443 quic reuseport;
    http2                   on;
    http3                   on;
    add_header              Alt-Svc 'h3=":443"; ma=86400' always;
    server_name             grafana.example.com;

    # SSL Configuration
    ssl_certificate         /etc/letsencrypt/live/grafana.example.com/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/grafana.example.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/grafana.example.com/chain.pem;

    # Include security and performance configs
    include                 conf.d/tls-intermediate.conf;
    include                 conf.d/general.conf;
    include                 conf.d/performance.conf;
    include                 snippets/security-headers.conf;
    include                 snippets/gzip.conf;
    include                 snippets/deny-files.conf;

    # Logging
    access_log              /var/log/nginx/grafana.access.log;
    error_log               /var/log/nginx/grafana.error.log warn;

    # Increase client body size for dashboard imports
    client_max_body_size    10M;

    # Security headers specific to Grafana
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Content Security Policy for Grafana
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self' 'unsafe-eval' 'unsafe-inline';
        style-src 'self' 'unsafe-inline';
        img-src 'self' data: https:;
        font-src 'self' data:;
        connect-src 'self' ws: wss:;
        object-src 'none';
        frame-src 'self';
        base-uri 'self';
        form-action 'self';
    " always;

    # Optional: IP whitelist for admin access (uncomment and configure as needed)
    # allow 192.168.1.0/24;    # Local network
    # allow 10.0.0.0/8;        # Private network
    # deny all;

    # Block access to sensitive files
    location ~ /\.(env|htaccess|htpasswd) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Static assets with caching
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # Proxy to Grafana for static assets
        proxy_pass              http://grafana_backend;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
    }

    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        proxy_pass              http://grafana_backend;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
    }

    # Grafana API endpoints
    location /api/ {
        limit_req               zone=api burst=30 nodelay;
        
        proxy_pass              http://grafana_backend;
        
        # Standard proxy headers from conf.d/proxy.conf
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-Host $host;
        proxy_set_header        X-Forwarded-Server $host;
        
        # Grafana-specific headers
        proxy_set_header        X-WEBAUTH-USER $remote_user;
        proxy_set_header        X-Forwarded-User $remote_user;
        
        # Extended timeouts for long-running queries (override defaults)
        proxy_connect_timeout   30s;
        proxy_send_timeout      300s;
        proxy_read_timeout      300s;
        
        # Standard proxy settings
        proxy_redirect          off;
        proxy_buffering         on;
        proxy_http_version      1.1;
        proxy_set_header        Connection "";
    }

    # Grafana WebSocket connections for live updates
    location /api/live/ {
        proxy_pass              http://grafana_backend;
        
        # WebSocket upgrade headers
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection $connection_upgrade;
        
        # Standard proxy headers
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_read_timeout      3600s;
        proxy_send_timeout      3600s;
        
        # Disable caching for WebSocket
        proxy_cache_bypass      $http_upgrade;
        proxy_no_cache          $http_upgrade;
    }

    # Grafana avatar images
    location /avatar/ {
        expires 1h;
        add_header Cache-Control "public";
        
        proxy_pass              http://grafana_backend;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
    }

    # Grafana public dashboards (if enabled)
    location /public/ {
        limit_req               zone=general burst=20 nodelay;
        
        proxy_pass              http://grafana_backend;
        include                 conf.d/proxy.conf;
        
        # Cache public content briefly
        expires 5m;
        add_header Cache-Control "public";
    }

    # Grafana login page and authentication
    location /login {
        limit_req               zone=general burst=10 nodelay;
        
        proxy_pass              http://grafana_backend;
        include                 conf.d/proxy.conf;
        
        # No caching for login pages
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }

    # Grafana logout
    location /logout {
        proxy_pass              http://grafana_backend;
        include                 conf.d/proxy.conf;
        
        # No caching for logout
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Grafana metrics endpoint (for monitoring Grafana itself)
    location /metrics {
        # Restrict access to monitoring systems
        allow 127.0.0.1;
        allow ::1;
        # allow 192.168.1.0/24;  # Add your monitoring network
        deny all;
        
        proxy_pass              http://grafana_backend;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        
        access_log off;
    }

    # Main Grafana application
    location / {
        limit_req               zone=general burst=15 nodelay;
        
        proxy_pass              http://grafana_backend;
        
        # Standard proxy headers from conf.d/proxy.conf
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-Host $host;
        proxy_set_header        X-Forwarded-Server $host;
        
        # Grafana-specific headers
        proxy_set_header        X-WEBAUTH-USER $remote_user;
        proxy_set_header        X-Forwarded-User $remote_user;
        
        # Custom timeouts for dashboard loading
        proxy_connect_timeout   30s;
        proxy_send_timeout      60s;
        proxy_read_timeout      60s;
        
        # Handle large dashboard configurations (override defaults)
        proxy_buffer_size       128k;
        proxy_buffers           4 256k;
        proxy_busy_buffers_size 256k;
        
        # Standard proxy settings
        proxy_redirect          off;
        proxy_buffering         on;
        proxy_http_version      1.1;
        proxy_set_header        Connection "";
    }

    # Health check endpoint
    location = /health {
        access_log off;
        add_header Content-Type "application/json" always;
        return 200 '{"status":"healthy","service":"grafana","timestamp":"$time_iso8601"}';
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# Grafana backend upstream
upstream grafana_backend {
    server 127.0.0.1:3000;
    # server 127.0.0.1:3001 backup;  # Add backup server if needed
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}