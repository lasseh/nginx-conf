# LibreNMS Network Monitoring System Configuration
# Replace 'librenms.example.com' with your actual domain name
# This configuration is optimized for LibreNMS requirements

# HTTP to HTTPS redirect
server {
    listen                  80;
    listen                  [::]:80;
    server_name             librenms.example.com;

    # Allow ACME challenge for Let's Encrypt
    include                 snippets/letsencrypt.conf;

    # Redirect all HTTP traffic to HTTPS
    location / {
        return              301 https://$server_name$request_uri;
    }
}

# Main LibreNMS HTTPS server
server {
    listen                  443 ssl;
    listen                  [::]:443 ssl;
    http2                   on;
    server_name             librenms.example.com;

    # SSL Configuration
    ssl_certificate         /etc/letsencrypt/live/librenms.example.com/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/librenms.example.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/librenms.example.com/chain.pem;

    # Include snippets
    include                 snippets/security-headers.conf;
    include                 snippets/gzip.conf;
    include                 snippets/deny-files.conf;

    # LibreNMS specific settings
    root                    /opt/librenms/html;
    index                   index.php;

    # Logging
    access_log              /var/log/nginx/librenms.access.log;
    error_log               /var/log/nginx/librenms.error.log warn;

    # Increase client body size for file uploads
    client_max_body_size    50M;

    # Security headers specific to LibreNMS
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Optional: IP whitelist for admin access (uncomment and configure as needed)
    # allow 192.168.1.0/24;    # Local network
    # allow 10.0.0.0/8;        # Private network
    # deny all;

    # Block access to sensitive directories
    location ~ ^/(\.git|\.svn|config|storage|bootstrap/cache) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to sensitive files
    location ~ /\.(env|htaccess|htpasswd) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to composer files
    location ~ /(composer\.(json|lock)|package\.json|yarn\.lock|webpack\.config\.js) {
        deny all;
        access_log off;
    }

    # Static assets with caching
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
    }

    # Favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
        expires 1d;
        add_header Cache-Control "public, immutable";
    }

    # LibreNMS API endpoints
    location ~ ^/api/ {
        limit_req               zone=api burst=20 nodelay;
        try_files $uri $uri/ /api.php?$query_string;
        
        # PHP processing for API
        location ~ \.php$ {
            include             snippets/php-fpm.conf;
            fastcgi_param       SCRIPT_FILENAME $document_root$fastcgi_script_name;
            
            # Extended timeouts for API operations
            fastcgi_read_timeout 300s;
            fastcgi_send_timeout 300s;
        }
    }

    # LibreNMS AJAX endpoints
    location ~ ^/ajax/ {
        limit_req               zone=general burst=30 nodelay;
        try_files $uri $uri/ /ajax.php?$query_string;
        
        location ~ \.php$ {
            include             snippets/php-fpm.conf;
            fastcgi_param       SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }
    }

    # LibreNMS graphs and images
    location ~ ^/(graph|graphs)/ {
        try_files $uri $uri/ /graph.php?$query_string;
        
        location ~ \.php$ {
            include             snippets/php-fpm.conf;
            fastcgi_param       SCRIPT_FILENAME $document_root$fastcgi_script_name;
            
            # Extended timeout for graph generation
            fastcgi_read_timeout 300s;
        }
    }

    # LibreNMS plugins
    location ~ ^/plugins/ {
        try_files $uri $uri/ /plugins.php?$query_string;
        
        location ~ \.php$ {
            include             snippets/php-fpm.conf;
            fastcgi_param       SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }
    }

    # LibreNMS install/update scripts (restrict access)
    location ~ ^/(install|update)\.php$ {
        # Uncomment to restrict to specific IPs during installation
        # allow 192.168.1.0/24;
        # deny all;
        
        include                 snippets/php-fpm.conf;
        fastcgi_param           SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # Main PHP handler for LibreNMS
    location ~ \.php$ {
        try_files $uri =404;
        include                 snippets/php-fpm.conf;
        fastcgi_param           SCRIPT_FILENAME $document_root$fastcgi_script_name;
        
        # LibreNMS specific PHP settings
        fastcgi_read_timeout    300s;
        fastcgi_send_timeout    300s;
    }

    # Main location block
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        
        # Rate limiting for general access
        limit_req               zone=general burst=10 nodelay;
    }

    # Health check endpoint
    location = /health {
        access_log off;
        add_header Content-Type "application/json" always;
        return 200 '{"status":"healthy","service":"librenms","timestamp":"$time_iso8601"}';
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}