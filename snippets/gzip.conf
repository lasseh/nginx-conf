# =============================================================================
# GZIP COMPRESSION CONFIGURATION
# =============================================================================
# High-performance gzip compression for bandwidth reduction and faster loading
# Include this snippet in server blocks: include snippets/gzip.conf;
# 
# Performance Impact: 60-80% size reduction for text-based content
# CPU Impact: Minimal overhead with optimized compression level
# Browser Support: Universal (all modern browsers support gzip)

# =============================================================================
# CORE GZIP SETTINGS
# =============================================================================

# Enable gzip compression
# Why: Reduces bandwidth usage by 60-80% for text-based content
# Impact: Significantly improves page load times, especially on slow connections
# Browser Support: Universal - supported by all modern browsers
gzip on;

# Add Vary: Accept-Encoding header to responses
# Why: Tells caches that content varies based on Accept-Encoding header
# Impact: Prevents serving compressed content to clients that don't support it
# SEO: Prevents caching issues that could affect search engine crawlers
gzip_vary on;

# Only compress files larger than 1KB
# Why: Small files have minimal compression benefit and add CPU overhead
# Impact: Improves efficiency by avoiding compression of tiny files
# Performance: Reduces unnecessary CPU usage for minimal gain
gzip_min_length 1024;

# Compress responses for all proxied requests
# Why: Ensures compression works behind load balancers and CDNs
# Impact: Maintains compression benefits in complex infrastructure setups
# Compatibility: Essential for modern cloud and CDN deployments
gzip_proxied any;

# Set compression level to 6 (balanced performance)
# Why: Level 6 provides excellent compression with reasonable CPU usage
# Impact: 95% of maximum compression with only 50% of CPU cost vs level 9
# Performance: Optimal balance between compression ratio and server performance
gzip_comp_level 6;

# =============================================================================
# GZIP MIME TYPES
# =============================================================================
# Comprehensive list of compressible content types for modern web applications

gzip_types
    # Web Application Formats
    application/javascript          # JavaScript files (.js)
    application/json               # JSON API responses and data files
    application/ld+json           # JSON-LD structured data
    application/manifest+json     # Web app manifests (PWA)
    application/x-javascript      # Legacy JavaScript MIME type
    
    # Document and Data Formats
    application/atom+xml          # Atom feeds
    application/geo+json          # GeoJSON geographic data
    application/rdf+xml           # RDF/XML semantic web data
    application/rss+xml           # RSS feeds
    application/xml               # Generic XML documents
    application/xhtml+xml         # XHTML documents
    
    # Font Formats (text-based only)
    font/eot                      # Embedded OpenType fonts
    font/otf                      # OpenType fonts
    font/ttf                      # TrueType fonts
    application/font-woff         # WOFF fonts (if served as application)
    application/vnd.ms-fontobject # EOT fonts alternative MIME type
    
    # Image Formats (vector only)
    image/svg+xml                 # SVG vector graphics
    
    # Text Formats
    text/css                      # Stylesheets
    text/javascript               # JavaScript (alternative MIME type)
    text/plain                    # Plain text files
    text/xml                      # XML as text
    text/x-component              # HTC files (legacy IE components)
    text/x-cross-domain-policy    # Cross-domain policy files
    
    # Additional Modern Formats
    application/vnd.api+json      # JSON API specification
    application/wasm              # WebAssembly (if served as application)
    application/x-font-ttf        # TrueType fonts (alternative MIME type)
    application/x-web-app-manifest+json; # Web app manifest (alternative)

# =============================================================================
# PERFORMANCE NOTES
# =============================================================================
# 
# Compression Ratios (typical):
# - HTML/CSS/JS: 70-80% reduction
# - JSON/XML: 60-70% reduction  
# - SVG: 60-80% reduction
# - Fonts: 40-60% reduction
#
# Not Compressed (already compressed or binary):
# - Images: JPEG, PNG, GIF, WebP
# - Videos: MP4, WebM, AVI
# - Archives: ZIP, RAR, 7Z
# - Fonts: WOFF2 (pre-compressed)
# - Audio: MP3, AAC, OGG
#
# CPU Impact:
# - Level 1: Fastest, ~20% compression
# - Level 6: Balanced, ~60% compression (recommended)
# - Level 9: Maximum, ~65% compression, 3x CPU cost
#
# =============================================================================
# USAGE EXAMPLES
# =============================================================================
#
# Basic usage in server block:
# server {
#     include snippets/gzip.conf;
#     # ... rest of configuration
# }
#
# For high-traffic sites, consider using Brotli instead:
# include snippets/brotli.conf;
#
# For static file servers, pre-compress files:
# gzip_static on;  # Serve .gz files if they exist