# =============================================================================
# NGINX SECURITY MONITORING CONFIGURATION
# =============================================================================
# Enhanced logging and monitoring for security events and fail2ban integration

# =============================================================================
# SECURITY LOG FORMATS
# =============================================================================

# Security-focused log format for monitoring attacks and suspicious activity
# Includes additional fields useful for security analysis and fail2ban
log_format security '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status $body_bytes_sent '
                   '"$http_referer" "$http_user_agent" '
                   'rt=$request_time ua="$upstream_addr" '
                   'us="$upstream_status" ut="$upstream_response_time" '
                   'ul="$upstream_response_length" '
                   'cs=$upstream_cache_status';

# Detailed security log format with request ID for correlation
log_format security_detailed '$remote_addr - $remote_user [$time_local] '
                            '"$request" $status $body_bytes_sent '
                            '"$http_referer" "$http_user_agent" '
                            'request_id="$request_id" '
                            'request_time=$request_time '
                            'connection=$connection '
                            'connection_requests=$connection_requests';

# =============================================================================
# SUSPICIOUS ACTIVITY DETECTION
# =============================================================================

# Log suspicious requests to separate file for fail2ban monitoring
# Include this in server blocks where you want enhanced monitoring
# access_log /var/log/nginx/security.log security;

# Map common attack patterns for enhanced logging
map $request_uri $suspicious_request {
    default 0;
    ~*\.(php|asp|aspx|jsp)$ 1;  # Script file requests on non-script sites
    ~*/wp-admin 1;              # WordPress admin attempts
    ~*/admin 1;                 # Generic admin attempts
    ~*\.\./\.\. 1;             # Directory traversal attempts
    ~*union.*select 1;          # SQL injection attempts
    ~*<script 1;                # XSS attempts
    ~*eval\( 1;                 # Code injection attempts
}

# Map user agents that are commonly used by bots and scanners
map $http_user_agent $suspicious_ua {
    default 0;
    ~*nikto 1;
    ~*sqlmap 1;
    ~*nmap 1;
    ~*masscan 1;
    ~*zmap 1;
    ~*curl 1;                   # Consider if you want to flag curl
    ~*wget 1;                   # Consider if you want to flag wget
    ~*python 1;                 # Python requests library
    ~*scanner 1;
    ~*bot 1;
    "" 1;                       # Empty user agent
}

# =============================================================================
# RATE LIMITING ZONES FOR SECURITY
# =============================================================================
# Define these in your main nginx.conf http block

# Strict rate limiting for login endpoints
# limit_req_zone $binary_remote_addr zone=login:10m rate=1r/m;

# Rate limiting for API endpoints
# limit_req_zone $binary_remote_addr zone=api_strict:10m rate=10r/m;

# Rate limiting for search and heavy operations
# limit_req_zone $binary_remote_addr zone=search:10m rate=5r/m;

# =============================================================================
# SECURITY MONITORING LOCATIONS
# =============================================================================

# Monitor and block common attack vectors
location ~* \.(php|asp|aspx|jsp)$ {
    # Log attempts to access script files (if not a script-based site)
    access_log /var/log/nginx/security.log security;
    return 444;  # Close connection without response
}

# Monitor WordPress-specific attacks (if not a WordPress site)
location ~* /wp-(admin|login|config|content) {
    access_log /var/log/nginx/security.log security;
    return 444;
}

# Monitor common admin panel attempts
location ~* /(admin|administrator|phpmyadmin|pma) {
    access_log /var/log/nginx/security.log security;
    return 444;
}

# Monitor directory traversal attempts
location ~* \.\./\.\. {
    access_log /var/log/nginx/security.log security;
    return 444;
}

# =============================================================================
# FAIL2BAN INTEGRATION
# =============================================================================

# Custom log format for fail2ban parsing
log_format fail2ban '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status $body_bytes_sent '
                   '"$http_referer" "$http_user_agent"';

# =============================================================================
# USAGE INSTRUCTIONS
# =============================================================================
# 1. Include this file in your nginx.conf or server blocks
# 2. Configure fail2ban with custom filters for nginx security logs
# 3. Set up log rotation for security logs
# 4. Monitor /var/log/nginx/security.log for attack patterns
# 5. Adjust suspicious_request and suspicious_ua maps for your environment

# Example fail2ban filter configuration:
# [Definition]
# failregex = ^<HOST> -.*"(GET|POST|HEAD).*" (404|403|400|444) .*$
# ignoreregex =

# Example server block usage:
# server {
#     include snippets/security-monitoring.conf;
#     
#     # Log suspicious requests
#     if ($suspicious_request) {
#         access_log /var/log/nginx/security.log security;
#     }
#     
#     # Apply strict rate limiting to login
#     location /login {
#         limit_req zone=login burst=2 nodelay;
#         # ... rest of location config
#     }
# }